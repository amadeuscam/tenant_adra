version: "3.1"
services:
  redis:
    image: redis:alpine
    ports:
      - '6379:6379'

  db:
    restart: always
    image: postgres:12
    environment:
      POSTGRES_DB: $DATABASE_NAME
      POSTGRES_USER: $MYSQL_USER
      POSTGRES_PASSWORD: $MYSQL_PASSWORD
    volumes:
      - persistent:/var/lib/postgresql/data/
    networks:
      - default
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  web:
    container_name: adra_tenant_app
    restart: always
    build:
      context: .
    volumes:
      - .:/app
      - static:/static
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    #      python manage.py migrate --no-input &&
    #python manage.py runserver 0.0.0.0:8000 "
    #gunicorn adra_project.wsgi --bind  0.0.0.0:8000"
    env_file:
      - ./.env
    depends_on:
      - redis
      - db
    links:
      - db

  nginx:
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - static:/static
    depends_on:
      - web

  #  phpmyadmin:
  #    restart: always
  #    image: phpmyadmin/phpmyadmin
  #    links:
  #      - db:db
  #    ports:
  #      - 8081:80
  #    environment:
  #      MYSQL_USER: $MYSQL_USER
  #      MYSQL_PASSWORD: $MYSQL_PASSWORD
  #      MYSQL_ROOT_PASSWORD: $MYSQL_PASSWORD

  celery:
    restart: always
    build:
      context: .
    command: celery --app=adra_project worker -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis

  celery-beat:
    restart: always
    build:
      context: .
    command: celery --app=adra_project beat -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
  flower:
    build: ./
    command: celery --app=adra_project flower
    volumes:
      - .:/app
    ports:
      - 5555:5555
    env_file:
      - ./.env
    depends_on:
      - celery
      - redis

volumes:
  persistent: { }
  static: { }
