# Generated by Django 3.2.10 on 2022-10-28 05:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import jsignature.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_apellido', models.CharField(max_length=100, unique=True, verbose_name='Nombre del beneficiario')),
                ('dni', models.CharField(blank=True, max_length=20)),
                ('otros_documentos', models.CharField(blank=True, max_length=20)),
                ('fecha_nacimiento', models.DateField()),
                ('numero_adra', models.IntegerField(unique=True)),
                ('nacionalidad', models.CharField(max_length=20)),
                ('covid', models.BooleanField(default=False, verbose_name='Covid entregas')),
                ('domicilio', models.TextField()),
                ('are_acte', models.BooleanField(default=False, verbose_name='Tiene papeles')),
                ('ciudad', models.CharField(max_length=350)),
                ('telefono', models.IntegerField()),
                ('email', models.CharField(blank=True, default='', max_length=100, validators=[django.core.validators.EmailValidator()], verbose_name='Email beneficiario')),
                ('mensaje', models.TextField(blank=True)),
                ('active', models.BooleanField(default=True, verbose_name='Activo?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('sexo', models.CharField(choices=[('mujer', 'Mujer'), ('hombre', 'Hombre')], max_length=20)),
                ('discapacidad', models.BooleanField(default=False)),
                ('categoria', models.CharField(choices=[('1', 'Domingo 2'), ('2', 'Domingo 4')], max_length=30)),
                ('codigo_postal', models.IntegerField(default=0)),
                ('empadronamiento', models.BooleanField(default=False, verbose_name='Certificado de empadronamiento actualizado con fecha de menos de tres meses ')),
                ('libro_familia', models.BooleanField(default=False, verbose_name='Fotocopia del Libro de Familia ')),
                ('fotocopia_dni', models.BooleanField(default=False, verbose_name='Fotocopia del DNI/NIE o pasaporte de todos los miembros del núcleo familiar')),
                ('prestaciones', models.BooleanField(default=False, verbose_name='Fotocopia de la documentación que acredite de prestación, pensión, paro, etc')),
                ('nomnia', models.BooleanField(default=False, verbose_name='Fotocopia de la nómina en caso de trabajar.')),
                ('cert_negativo', models.BooleanField(default=False, verbose_name='En caso de no tener ingresos: certificado negativo de rentas, de la Agencia Tributaria.')),
                ('aquiler_hipoteca', models.BooleanField(default=False, verbose_name='Ultimo recibo alquiler o  hipoteca de vivienda familiar en la que están empadronados')),
                ('recibos', models.BooleanField(default=False, verbose_name='Recibo de gastos básicos: luz, agua, gas, calefacción, comunidad y  comedor escolar.')),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Beneficiario',
                'verbose_name_plural': 'Beneficiarios',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Hijo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parentesco', models.CharField(choices=[('esposo', 'Esposo'), ('esposa', 'Esposa'), ('hijo', 'Hijo'), ('hija', 'Hija')], max_length=20)),
                ('sexo', models.CharField(choices=[('mujer', 'Mujer'), ('hombre', 'Hombre')], max_length=20)),
                ('nombre_apellido', models.CharField(max_length=50)),
                ('dni', models.CharField(blank=True, max_length=50)),
                ('otros_documentos', models.CharField(blank=True, max_length=50)),
                ('fecha_nacimiento', models.DateField(verbose_name='Formato fecha-> dia/mes/año')),
                ('edad', models.IntegerField(default=0)),
                ('active', models.BooleanField(default=True, verbose_name='Activo?')),
                ('discapacidad', models.BooleanField(default=False)),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hijo', to='adra.persona')),
            ],
            options={
                'verbose_name': 'Familiar del Beneficiario',
                'verbose_name_plural': 'Familiares del Beneficiario',
            },
        ),
        migrations.CreateModel(
            name='AlmacenAlimentos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alimento_1', models.IntegerField(default=None, verbose_name='Arroz Blanco')),
                ('alimento_2', models.IntegerField(default=None, verbose_name='Alubia cocida')),
                ('alimento_3', models.IntegerField(default=None, verbose_name='Conserva de atún')),
                ('alimento_4', models.IntegerField(default=None, verbose_name='Pasta alimenticia tipo macarron')),
                ('alimento_5', models.IntegerField(default=None, verbose_name='Tomate frito en conserva')),
                ('alimento_6', models.IntegerField(default=None, verbose_name='Galletas')),
                ('alimento_7', models.IntegerField(default=None, verbose_name='Macedonia de verduras en conserva')),
                ('alimento_8', models.IntegerField(default=None, verbose_name='Fruta en conserva')),
                ('alimento_9', models.IntegerField(default=None, verbose_name='Cacao soluble')),
                ('alimento_10', models.IntegerField(default=None, verbose_name='Tarritos infantiles con pollo')),
                ('alimento_11', models.IntegerField(default=None, verbose_name='Tarritos infantiles de fruta')),
                ('alimento_12', models.IntegerField(default=None, verbose_name='Leche entera UHT')),
                ('alimento_13', models.IntegerField(default=None, verbose_name='Aceite de oliva')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('alimento_1_caducidad', models.DateField(blank=True, default=None, verbose_name='Arroz Blanco')),
                ('alimento_2_caducidad', models.DateField(blank=True, default=None, verbose_name='Alubia cocida')),
                ('alimento_3_caducidad', models.DateField(blank=True, default=None, verbose_name='Conserva de atún')),
                ('alimento_4_caducidad', models.DateField(blank=True, default=None, verbose_name='Pasta alimenticia tipo macarron')),
                ('alimento_5_caducidad', models.DateField(blank=True, default=None, verbose_name='Tomate frito en conserva')),
                ('alimento_6_caducidad', models.DateField(blank=True, default=None, verbose_name='Galletas')),
                ('alimento_7_caducidad', models.DateField(blank=True, default=None, verbose_name='Macedonia de verduras en conserva')),
                ('alimento_8_caducidad', models.DateField(blank=True, default=None, verbose_name='Fruta en conserva')),
                ('alimento_9_caducidad', models.DateField(blank=True, default=None, verbose_name='Cacao soluble')),
                ('alimento_10_caducidad', models.DateField(blank=True, default=None, verbose_name='Tarritos infantiles con pollo')),
                ('alimento_11_caducidad', models.DateField(blank=True, default=None, verbose_name='Tarritos infantiles de fruta')),
                ('alimento_12_caducidad', models.DateField(blank=True, default=None, verbose_name='Leche entera UHT')),
                ('alimento_13_caducidad', models.DateField(blank=True, default=None, verbose_name='Aceite de oliva')),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Almacen Alimento',
                'verbose_name_plural': 'Almacen Alimentos',
            },
        ),
        migrations.CreateModel(
            name='Alimentos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alimento_1', models.IntegerField(default=None, verbose_name='Arroz Blanco')),
                ('alimento_2', models.IntegerField(default=None, verbose_name='Alubia cocida')),
                ('alimento_3', models.IntegerField(default=None, verbose_name='Conserva de atún')),
                ('alimento_4', models.IntegerField(default=None, verbose_name='Pasta alimenticia tipo macarron')),
                ('alimento_5', models.IntegerField(default=None, verbose_name='Tomate frito en conserva')),
                ('alimento_6', models.IntegerField(default=None, verbose_name='Galletas')),
                ('alimento_7', models.IntegerField(default=None, verbose_name='Macedonia de verduras en conserva')),
                ('alimento_8', models.IntegerField(default=None, verbose_name='Fruta en conserva')),
                ('alimento_9', models.IntegerField(default=None, verbose_name='Cacao soluble')),
                ('alimento_10', models.IntegerField(default=None, verbose_name='Tarritos infantiles con pollo')),
                ('alimento_11', models.IntegerField(default=None, verbose_name='Tarritos infantiles de fruta')),
                ('alimento_12', models.IntegerField(default=None, verbose_name='Leche entera UHT')),
                ('alimento_13', models.IntegerField(default=None, verbose_name='Aceite de oliva')),
                ('signature', jsignature.fields.JSignatureField(blank=True, default=None, null=True)),
                ('fecha_recogida', models.DateTimeField()),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alimentos', to='adra.persona')),
            ],
            options={
                'verbose_name': 'Alimento',
                'verbose_name_plural': 'Alimentos',
                'ordering': ['-fecha_recogida'],
            },
        ),
    ]
