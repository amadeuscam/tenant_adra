name: Deploy to ECR

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_HOST: localhost # default host value for the database
      POSTGRES_DB: adra_tenant_new
      POSTGRES_PORT: 5432

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt


      - name: Test with pytest
        env:
          DEBUG: 1
          MYSQL_USER: ${{ env.POSTGRES_USER }}
          MYSQL_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          MYSQL_HOST: ${{ env.POSTGRES_HOST }}
          DATABASE_NAME: ${{ env.POSTGRES_DB }}
          SECRET_KEY: ${{ secrets.SECRET_KEY_TEST }}
          DJANGO_SETTINGS_MODULE: 'adra_project.settings.dev'
          SUPERUSER_NAME: lucian
          SUPERUSER_PASSWORD: masina
          SUPERUSER_EMAIL: amadeuscam@yahoo.es

        run: |
          python manage.py collectstatic --noinput
          pytest -vv


      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD 

      - name: Build, tag, and push web image to Docker hub
        env:
          ECR_REGISTRY: ${{secrets.DOCKER_USER}}
          ECR_REPOSITORY: adra-tenant
          IMAGE_TAG_WEB: web
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_WEB .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_WEB

      - name: Build, tag, and push nginx image to Docker hub
        env:
          ECR_REGISTRY: ${{secrets.DOCKER_USER}}
          ECR_REPOSITORY: adra-tenant
          IMAGE_TAG_NGINX: nginx
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_NGINX ./nginx
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_NGINX
